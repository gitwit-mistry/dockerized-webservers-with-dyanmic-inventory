---
# tasks file for docker-containers-role
#

- yum_repository:
    name: "docker-ce"
    baseurl: "https://download.docker.com/linux/centos/7/x86_64/stable/"
    description: "docker repo file"
    gpgcheck: no

- package:
    name: "docker-ce-18.09.1-3.el7.x86_64"
    state: present
    skip_broken: yes

- service:
    name: "docker"
    state: started
    enabled: yes

- package:
    name: "python3"
    state: present

- pip:
    name: "docker"
    state: present
    executable: pip3

- file:
    state: directory
    path: "./docker_ws_dir"

- copy:
    dest: "./docker_ws_dir/index.html"
    content: "This is the ansible managed webserver inside a container\n"

- docker_image:
    name: "centos_ws:v1"
    pull: yes
    path: Dockerfile/
    state: present
    source: build

- docker_container:
    name: "ws_container"
    image: "centos_ws:v1"
    state: started
    detach: true
    interactive: true
    exposed_ports:
      - "80"
    ports:
      - "1234:80"
    volumes:
      - "./docker_ws_dir:/var/www/html"

- name: Retrieve the Ip adress of the Created Container
  docker_container_info:
    name: "ws_container"
  register: container_details

- debug:
    var: container_details.container.NetworkSettings.IPAddress

- name: Add the container to the in-memory inventory
  add_host:
    name: "{{ container_details.container.NetworkSettings.IPAddress }}"
    groups: docker_containers

- firewalld:
    port: "80/tcp"
    port: "1234/tcp"
    state: enabled
    immediate: yes
    permanent: yes


- debug: var=hostvars[inventory_hostname].groups.docker_containers

- name: add container ip to inventory file
  lineinfile:
    path: inventory
    insertafter: "[docker_ws_containers]"
    line: "{{ item }}"
  with_items:
    - "{{ hostvars[inventory_hostname].groups.docker_containers }}"

- meta: refresh_inventory

